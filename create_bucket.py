#!/usr/bin/env python3
"""
Script de cr√©ation automatique du bucket MinIO
Utilis√© dans le Dockerfile pour initialiser le bucket 'videos'
"""

import os
import sys
import minio
from minio.error import S3Error

def create_bucket_if_not_exists():
    """Cr√©er le bucket s'il n'existe pas"""
    try:
        # Configuration depuis les variables d'environnement
        # En mode d√©veloppement, utiliser localhost au lieu de minio
        endpoint = os.getenv("MINIO_ENDPOINT", "localhost:9000")
        access_key = os.getenv("MINIO_ACCESS_KEY", "admin")
        secret_key = os.getenv("MINIO_SECRET_KEY", "admin123")
        secure = os.getenv("MINIO_SECURE", "false").lower() == "true"
        bucket_name = os.getenv("MINIO_BUCKET", "videos")
        
        print(f"üîó Connexion √† MinIO: {endpoint}")
        
        # Cr√©er le client MinIO
        client = minio.Minio(
            endpoint,
            access_key=access_key,
            secret_key=secret_key,
            secure=secure
        )
        
        # V√©rifier si le bucket existe
        if not client.bucket_exists(bucket_name):
            client.make_bucket(bucket_name)
            print(f"‚úÖ Bucket '{bucket_name}' cr√©√© avec succ√®s")
        else:
            print(f"‚úÖ Bucket '{bucket_name}' existe d√©j√†")
            
        # Lister les buckets pour v√©rification
        buckets = client.list_buckets()
        print(f"üìã Buckets disponibles: {[b.name for b in buckets]}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation du bucket: {e}")
        return False

if __name__ == "__main__":
    success = create_bucket_if_not_exists()
    sys.exit(0 if success else 1)
